$inputs-groups-addons-variants: (
  default: (
    color-normal: $base-color,
    color-hover: $base-color,
    color-focus: $base-color,

    bg-color-normal: #fff,
    bg-color-hover: #fff,
    bg-color-focus: #fff,

    border-color-normal: $borders-color,
    border-color-focus: $color-primary,

    shadow-normal: none,
    shadow-focus: none
  ),
  success: (
    color-normal: darken($color-success, 10%),
    color-hover: darken($color-success, 10%),
    color-focus: $base-color,

    bg-color-normal: #fff,
    bg-color-hover: #fff,
    bg-color-focus: #fff,

    border-color-normal: $color-success,
    border-color-focus: $color-primary,

    shadow-normal: none,
    shadow-focus: none
  ),
  danger: (
    color-normal: darken($color-danger, 10%),
    color-hover: darken($color-danger, 10%),
    color-focus: $base-color,

    bg-color-normal: #fff,
    bg-color-hover: #fff,
    bg-color-focus: #fff,

    border-color-normal: $color-danger,
    border-color-focus: $color-primary,

    shadow-normal: none,
    shadow-focus: none
  )
) !default;


.input-group {
  //display: flex;

  @include ib($full-width: true);

  .btn,
  .addon,
  .input {
    @include ib-item();

    //vertical-align: middle;
    //display: inline-block;
  }

  .btn,
  .addon {
    white-space: nowrap;
    // todo цвета радуги
  }

  .btn,
  .input {
    @include stack-item-upward(2);

    //flex: 1;
    //min-width: 1px;

    &:hover,
    &:focus,
    &:active {
      @include stack-item-upward(3);
    }

    &.-upward {
      @include stack-item-upward(4);
    }
  }

  // fallback
  .no-flexbox & {
    .btn,
    .addon,
    .input {
      margin: 0;
    }
  }

  @each $size, $data in $control-sizes {
    $selector: if($size == default, '&', '&.-size-#{$size}');
    #{$selector} {
      .btn,
      .addon,
      .input { @include control-size-preset($size); }
    }
  }

}
