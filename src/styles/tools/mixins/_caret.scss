@mixin triangle ($size, $direction, $color: currentColor, $shadow: null) {
  $size: get-bounds-map($size);
  $width: map-get($size, y); // так надо
  $height: map-get($size, x); // так надо

  $width: $width/2;
  $color-border-style: $height solid $color;
  $transparent-border-style: $width solid transparent;

  width: 0;
  height: 0;
  display: block;
  content: '';

  @if $direction == up or $direction == top {
    border-bottom: $color-border-style;
    border-left: $transparent-border-style;
    border-right: $transparent-border-style;
  }
  @elseif $direction == right {
    border-left: $color-border-style;
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
  }
  @elseif $direction == down or $direction == bottom {
    border-top: $color-border-style;
    border-left: $transparent-border-style;
    border-right: $transparent-border-style;
  }
  @elseif $direction == left {
    border-right: $color-border-style;
    border-top: $transparent-border-style;
    border-bottom: $transparent-border-style;
  }

  @if $shadow {
    filter: drop-shadow($shadow);
  }
}

///   //SCSS
///   .caret{
///     @include caret(50px, 1px, down, red, #ccc);
///   }
///
///   //CSS
///   .caret {
///     position: relative;
///   }
///   .caret:before, .caret:after {
///     content: "";
///     position: absolute;
///   }
///   .caret:before {
///     top: 0;
///     left: 0;
///     border-top: 50px solid red;
///     border-left: 50px solid transparent;
///     border-right: 50px solid transparent;
///   }
///   .caret:after {
///     left: 1px;
///     top: 0;
///     border-top: 49px solid #ccc;
///     border-left: 49px solid transparent;
///     border-right: 49px solid transparent;
///   }
/// @link http://lugolabs.com/caret

@mixin caret ($caret-width, $border-width, $direction, $color, $border-color) {
  position: relative;

  &:before,
  &:after {
    @include pseudo($position: absolute);
  }
  @if $direction == up or $direction == top {
    &:before {
      top: 0;
      left: 0;
      @include triangle($caret-width $caret-width, $direction, $border-color);
    }
    &:after {
      left: $border-width;
      top: $border-width;
      @include triangle(($caret-width - $border-width) ($caret-width - $border-width), $direction, $color);
    }
  }
  @elseif $direction == right {
    &:before {
      top: 0;
      left: 0;
      @include triangle($caret-width $caret-width, $direction, $border-color);
    }
    &:after {
      top: $border-width;
      left: 0;
      @include triangle(($caret-width - $border-width) ($caret-width - $border-width), $direction, $color);
    }
  }
  @elseif $direction == down or $direction == bottom {
    &:before {
      top: 0;
      left: 0;
      @include triangle($caret-width $caret-width, $direction, $border-color);
    }
    &:after {
      top: 0;
      left: $border-width;
      @include triangle(($caret-width - $border-width) ($caret-width - $border-width), $direction, $color);
    }
  }
  @elseif $direction == left {
    &:before {
      top: 0;
      left: 0;
      @include triangle($caret-width $caret-width, $direction, $border-color);
    }
    &:after {
      top: $border-width;
      left: $border-width;
      @include triangle(($caret-width - $border-width) ($caret-width - $border-width), $direction, $color);
    }
  }
}
