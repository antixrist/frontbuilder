//@import 'common';
//@import '../states';
//@import '../selectors/bem';

$base-font-size: 16px !default;

@mixin btn-reset () {
  @include is-non-focusable;

  display:          inline;
  margin:           0;
  padding:          0;
  vertical-align:   middle;
  //touch-action:     none;
  background-image: none;
  border:           none;
  position:         static;
  overflow:         visible;
  outline:          0 none;
  color:            inherit;
  text-align:       inherit;
  text-decoration:  inherit;
  cursor:           inherit;
  white-space:      inherit;
  line-height:      1.2;
}

@mixin btn () {
  @include btn-reset;
  @include unselectable;

  font-size:        1rem;
  line-height:      1.2;
  display:          inline-block;
  margin:           0;
  padding:          0;
  text-align:       center;
  vertical-align:   middle;
  text-decoration:  none;
  touch-action:     manipulation;
  cursor:           pointer;
  background-image: none;
  white-space:      nowrap;
  position:         relative;
  //overflow:         hidden;
  outline:          0 none;

  @include state-is (hover) {
    @include state-is (focus) {
      @include is-non-focused;
    }
  }

  @include state-is (focus) {
    @include is-focused;
  }

  @include state-is (active) {
    @include is-non-focused;
  }

  // todo: :-(
  &[disabled], fieldset[disabled] &,
  #{&}.is-disabled, fieldset.is-disabled & {
    @include not-actionable;

    cursor: default;
    opacity: .65;
    box-shadow: none;
  }

  @include e (inner) {
    vertical-align: middle;
  }
}

@mixin btn-block {
  display: block;
  min-width: 100%;
  white-space: normal;
}

@mixin btn-file {
  position: relative;

  input[type=file] {
    cursor: pointer;
    opacity: 0;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: 0;
    padding: 0;
    border: none;
    z-index: 2;
    width: 100%;
    height: 100%;
  }
}

@mixin btn-variant (
  $color-normal: inherit,
  $color-hover: $color-normal,
  $color-focus: $color-normal,
  $color-active: $color-normal,

  $bg-color-normal: if(type_of($color-normal) == color, invert($color-normal), $color-normal),
  $bg-color-hover: if(type_of($bg-color-normal) == color, lighten($bg-color-normal, 20%), $bg-color-normal),
  $bg-color-focus: $bg-color-hover,
  $bg-color-active: if(type_of($bg-color-normal) == color, lighten($bg-color-normal, 20%), $bg-color-normal),

  $border-color-normal: $bg-color-normal,
  $border-color-hover: $bg-color-hover,
  $border-color-focus: $border-color-hover,
  $border-color-active: $bg-color-active,

  $shadow-normal: none,
  $shadow-hover: $shadow-normal,
  $shadow-focus: $shadow-hover,
  $shadow-active: inset 0 3px 5px rgba(0, 0, 0, .125),

  $transition-normal: all .1s ease-out,
  $transition-hover: $transition-normal,
  $transition-focus: $transition-hover,
  $transition-active: $transition-hover,

  $normal: (),
  $hover: (),
  $focus: (),
  $active: ()
) {
  &, &:visited {
    border: 1px solid transparent;

    color: $color-normal;
    border-color: $border-color-normal;
    background-color: $bg-color-normal;
    transition: $transition-normal;
    box-shadow: $shadow-normal;

    @include apply-styles($normal);
  }

  @include state-is (hover) {
    &, &:visited {
      color: $color-hover;
      border-color: $border-color-hover;
      background-color: $bg-color-hover;
      transition: $transition-hover;
      box-shadow: $shadow-hover;

      @include apply-styles($hover);
    }
  }

  @include state-is (focus) {
    &, &:visited {
      color: $color-focus;
      border-color: $border-color-focus;
      background-color: $bg-color-focus;
      transition: $transition-focus;
      box-shadow: $shadow-focus;
    }
  }

  @include state-is (active) {
    &, &:visited {
      color: $color-active;
      border-color: $border-color-active;
      background-color: $bg-color-active;
      transition: $transition-active;
      box-shadow: $shadow-active;

      @include apply-styles($active);
    }
  }
};

@mixin btn-size (
  $font-size: $base-font-size,
  $active-offset: 1px,
  $base-font-size: $base-font-size
) {
  $fs: $font-size;

  font-size: rem($fs, $base-font-size);
  padding: .5em 1em;

  @include state-is (active) {
    padding-top: em(px(.5em, $fs) + $active-offset, $fs);
    padding-bottom: em(px(.5em, $fs) - $active-offset, $fs);
  }
}
