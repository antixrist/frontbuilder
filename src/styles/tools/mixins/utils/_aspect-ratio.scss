/** todo: отрефакторить, выкинуть лишнее. как правильно задавать и считать ratio? */

/// Geometric size
/// @param {number} $width - 容器的`width`
/// @param {number} $height - 容器的`height`
/// @param {number} $base [0]
@mixin geometric-size($width, $height, $base: 0) {
  @if $base == 0 {
    width: $width;
    padding-bottom: $height / $width * 100%;
  } @else {
    width: $width / $base * 100%;
    padding-bottom: $height / $base * 100%;
  }
  height: 0;
  overflow: hidden;
}

/// 容器高度相对于宽度的计算
/// @param {number} $percentage [100%] - 高度和宽度一样
/// @param {string} $pos [after] - 通过伪元元素 `after`来撑开容器 [before] - 通过伪元素 `before`来撑开容器
@mixin heightRelativeToWidth($percentage: 100%, $pos: 'after') {
  &:#{$pos} {
    content: " ";
    display: block;
    height: 0;
    padding-bottom: $percentage;
    @content;
  }
}

@mixin ratio ($ratio: 1/1) {
  overflow: hidden;
  position: relative;

  // The container's height, as a percentage of the
  // container's width, is set by assigning
  // padding-top to a pseudo-element.
  &:before {
    content: "";
    display: block;
    height: 0;
    padding-top: (1 / $ratio) * 100%;
  }
}

@mixin aspect-ratio ($width, $height) {
  height: 0;
  width: 100%;
  padding-bottom: $height / $width * 100%;
}

/// Fluid aspect rations for RWD background images
/// @param {list} $large-size
/// @param {list} $small-size
/// @example
/// //SCSS
/// .fluid-ratio{
///   	@include fluid-ratio(800 400, 300 150);
/// }
/// //Out CSS
/// .fluid-ratio {
///   	padding-top: 50%;
///   	height: 0;
///   	background-size: cover;
///   	background-position: center;
/// }
/// @link http://voormedia.com/blog/2012/11/responsive-background-images-with-fixed-or-fluid-aspect-ratios

@mixin fluid-ratio ($large-size, $small-size) {
  $width-large: nth($large-size, 1);
  $width-small: nth($small-size, 1);
  $height-large: nth($large-size, 2);
  $height-small: nth($small-size, 2);
  //slope => slope = (h2 - h1) / (w2 - w1)
  // h1 => $height-large
  // w1 => $width-large
  // h2 => $height-small
  // w2 => $width-small
  $slope: ($height-large - $height-small) / ($width-large - $width-small);
  // start Height => Start height = h1 - w1 * slope
  $start-height: $height-small - $width-small * $slope;

  padding-top: $slope * 100%;
  height: $start-height;
  background-position: center;
}
