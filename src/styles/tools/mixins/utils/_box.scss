@mixin box (
  $bounds,
  $sides: null,
  $type: padding // `padding` or `margin` or `absolute` or `fixed`
) {
  $bounds: get-bounds-map($bounds);

  $property: padding-;
  @if $type == margin {
    $property: margin-;
  }
  @if $type == fixed {
    $property: null;
    position: fixed;
  }
  @elseif $type == absolute {
    $property: null;
    position: absolute;
  }

  @if $sides == null {
    $sides: map-keys(get-bounds-map($bounds));
  }
  @if type_of($sides) != list {
    $sides: ($sides,);
  }

  @each $side in (top right bottom left x y) {
    @if index($sides, $side) and map-has-key($bounds, $side) {
      @if $side == x {
        #{$property}left:  _get($bounds, x);
        #{$property}right: _get($bounds, x);
      }
      @elseif $side == y {
        #{$property}top:    _get($bounds, y);
        #{$property}bottom: _get($bounds, y);
      }
      @else {
        #{$property}#{$side}: _get($bounds, $side);
      }
    }
  }
}

@mixin unboxing (
  $bounds,
  $sides: null,
  $type: margin // `margin` or `absolute` or `fixed`
) {
  $bounds: get-bounds-map($bounds);

  $property: margin-;
  @if $type == fixed {
    $property: null;
    position: fixed;
  }
  @elseif $type == absolute {
    $property: null;
    position: absolute;
  }

  @if not $sides {
    $sides: map-keys(get-bounds-map($bounds));
  }
  @if type_of($sides) != list {
    $sides: ($sides,);
  }

  @each $side in (top right bottom left x y) {
    @if index($sides, $side) and map-has-key($bounds, $side) {
      @if $side == x {
        $x: invert-number(_get($bounds, x));

        #{$property}left:  $x;
        #{$property}right: $x;
      }
      @elseif $side == y {
        $y: invert-number(_get($bounds, y));

        #{$property}top:    _get($bounds, $y);
        #{$property}bottom: _get($bounds, $y);
      }
      @else {
        #{$property}#{$side}: invert-number(_get($bounds, $side));
      }
    }
  }
}
