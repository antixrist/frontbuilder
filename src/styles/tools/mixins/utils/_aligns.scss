@mixin is-centered-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin center ($size, $direction: x y) {
  position: absolute;
  $x: not not index($direction, x);
  $y: not not index($direction, y);

  @if not $x and not $y {
    $x: true;
    $y: true;
  }

  @if $size {
    $size: get-sizes-map($size);

    @if $x {
      left: 50%;
      margin-left: map-get($size, width) /2 * -1;
    }

    @if $y {
      top: 50%;
      margin-top: map-get($size, height) /2 * -1;
    }
  }
  @else {
    @if $x and $y {
      top: 50%;
      left: 50%;
      transform: translate3d(-50%, -50%, 0);
    }
    @elseif $x {
      left: 50%;
      transform: translate3d(-50%, 0, 0);
    }
    @elseif $y {
      top: 50%;
      transform: translate3d(0, -50%, 0);
    }
  }
}

@mixin outside-position ($position, $size: null) {
  $position: if(type-of($position) != list, ($position,), $position);

  @if length($position) == 0 {
    $position: center center;
  }
  @elseif length($position) == 1 {
    $position: append($position, center);
  }

  $left: nth($position, 1);
  $right: nth($position, 2);

  @if $left == center and $right == center {
    @include center($size);
  }
  @else {
    @if $left == top {
      top: auto;
      bottom: 100%;

      @if $right == left {
        left: 0;
        right: auto;
      }
      @if $right == right {
        left: auto;
        right: 0;
      }
      @if $right == center {
        @include center($size, x);
      }
    }
    @if $left == right {
      left: 100%;
      right: auto;

      @if $right == top {
        top: 0;
        bottom: auto;
      }
      @if $right == bottom {
        top: auto;
        bottom: 0;
      }
      @if $right == center {
        @include center($size, y);
      }
    }
    @if $left == bottom {
      top: 100%;
      bottom: auto;

      @if $right == left {
        left: 0;
        right: auto;
      }
      @if $right == right {
        left: auto;
        right: 0;
      }
      @if $right == center {
        @include center($size, x);
      }
    }
    @if $left == left {
      left: auto;
      right: 100%;

      @if $right == top {
        top: 0;
        bottom: auto;
      }
      @if $right == bottom {
        top: auto;
        bottom: 0;
      }
      @if $right == center {
        @include center($size, y);
      }
    }
  }
}

/**
 * todo: дальше втирается какая-то дичь. разобраться
 */
@mixin center-inner {
  text-align: center;

  > * {
    display: inline-block;
    text-align: left;
  }
}

@mixin vertical-center () {
  // флексбоксами
}

@mixin vertical-center-table () {
  display: table;
  width: 100%;
}
@mixin vertical-center-cell () {
  display: table-cell;
  margin-top: inherit;
  vertical-align: middle;
  width: 100%;
}

@mixin vertical-center-lh ($height) {
  height: $height;
  line-height: $height;
}

@mixin vertical-center-translate () {
  transform: translate(50%, 50%);
  margin-top: -50%;
  margin-left: -50%;
}

@mixin vertical-center-ib ($selectors...) {
  &:before {
    content: "";
    height: 100%;
    display: inline-block;
    vertical-align: middle;
    // A small negative right margin is set
    // to account for the default
    // word-spacing of inline-block.
    margin-right: -0.25em;
  }

  $selectors: if(length($selectors) == 0, '*', $selectors);
  @each $cell-selector in $selectors {
    $cell-selector: unquote($cell-selector);
    & > #{$cell-selector} {
      display: inline-block;
      vertical-align: middle;
    }
  }
}


//.Aligner {
//  display: flex;
//  align-items: center;
//  justify-content: center;
//}
//
//.Aligner-item {
//  max-width: 50%;
//}
//
//.Aligner-item--top {
//  align-self: flex-start;
//}
//
//.Aligner-item--bottom {
//  align-self: flex-end;
//}
