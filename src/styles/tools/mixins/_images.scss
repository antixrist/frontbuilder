@mixin is-responsive-image {
  max-width: 100%;
  height: auto;
}

@mixin is-centered-image {
  @include is-centered-block;
}

$background-size-behavior: '/js/vendor/backgroundsize.min.htc' !default;
@mixin bg-size ($url, $factor: 1) {
  @if (type_of($url) == list and type_of(nth($url, 1)) == number) or type_of($url) == number {
    background-size: $url;
  } @else {
    background-size: width($url, $factor) height($url, $factor);
  }

  @if (type-of($background-size-behavior) == string and $background-size-behavior != '') {
    .lt-ie9 & {
      -ms-behavior: url($background-size-behavior);
    }
  }
}

//--------------
// .qwe {
//   @include preload-images('qweqwe.jpg');
// }
//
// после всех стилей, в самом конце
// @include preload-images;
//
//--------------
$_preload-image-list:     () !default;
$_preload-images-loaded:  false !default;
$_preload-image-urls:     () !default;
@mixin preload-images ($images...) {
  @if not variable-exists(_preload-image-list) {
    $_preload-image-list: () !global;
  }
  @if not variable-exists(_preload-image-urls) {
    $_preload-image-urls: () !global;
  }
  @if not variable-exists(_preload-images-loaded) {
    $_preload-images-loaded: false !global;
  }

  @if length($images) > 0 {
    $_preload-image-list: join($images, $_preload-image-list) !global;
    $image-urls: ();
    @if length($_preload-image-list) > 0 {
      @for $i from 1 through length($_preload-image-list) {
        $image: nth($_preload-image-list, $i);
        $image-urls: join(url($image), $image-urls);
      }
    }
    $result: ();
    @each $item in $image-urls {
      @if not index($result, $item) {
        $result: append($result, $item, comma);
      }
    }
    $_preload-image-urls: $result !global;
  }
  @elseif not $_preload-images-loaded {
    $_preload-images-loaded: true !global;
    html:after {
      content: '';
      display: none;
      background-image: $_preload-image-urls;
    }
  }
}
