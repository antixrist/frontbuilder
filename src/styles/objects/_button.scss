$btn-variants: (
  default: (
    color-normal: $color-primary,
    color-hover: #fff,
    color-focus: $color-primary,
    color-active: #fff,

    bg-color-normal: #fff,
    bg-color-hover: $color-primary,
    bg-color-focus: #fff,
    bg-color-active: $color-primary,
  ),
  primary: (
    color-normal: #fff,
    color-hover: #fff,
    color-active: #fff,

    bg-color-normal: $color-primary,
    bg-color-hover: darken($color-primary, 10%),
    bg-color-active: darken($color-primary, 10%),
  ),
  success: (
    color-normal: #fff,
    color-hover: #fff,
    color-active: #fff,

    bg-color-normal: $color-success,
    bg-color-hover: darken($color-success, 10%),
    bg-color-active: darken($color-success, 10%)
  ),
  danger: (
    color-normal: #fff,
    color-hover: #fff,
    color-active: #fff,

    bg-color-normal: $color-danger,
    bg-color-hover: darken($color-danger, 10%),
    bg-color-active: darken($color-danger, 10%)
  ),
  secondary: (
    color-normal: $color-primary,
    color-hover: $color-primary,
    color-active: $color-primary,

    bg-color-normal: $borders-color,
    bg-color-hover: darken($borders-color, 10%),
    bg-color-active: darken($borders-color, 10%)
  )
) !default;

.btn {
  @include btn;

  @each $size, $data in $control-sizes {
    $selector: if($size == default, '&', '&.-size-#{$size}');
    #{$selector} { @include control-size-preset($size); }
  }

  @each $variant, $data in $btn-variants {
    $selector: if($variant == default, '&', '&.-#{$variant}');
    #{$selector} {
      $args: map-get($btn-variants, $variant);
      @include btn-variant($args...);
    }
  }

  border-radius: $base-radius;
  &.-square {
    border-radius: 0;
  }

  &.-wide {
    @include btn-wide;
  }
}

.float-buttons {
  display: inline-block;

  .btn {
    //@include btn;
    @include btn-hover  () {  }
    @include btn-focus  () {  }
    @include btn-active () {  }

    border-radius: 0;

    //@include btn-variant(
    //  $color-normal: $color-primary,
    //  $color-hover:  #fff,
    //  $color-focus:  #fff,
    //  $color-active: #fff,
    //
    //  $bg-color-normal: #fff,
    //  $bg-color-hover:  $color-primary,
    //  $bg-color-focus:  $color-primary,
    //  $bg-color-active: $color-primary,
    //
    //  $shadow-normal: none,
    //  $shadow-hover:  none,
    //  $shadow-focus:  none,
    //  $shadow-active: inset 0 3px 5px rgba(0, 0, 0, .125)
    //);

    border: none;
    //padding: 0;
    //width: 47px;
    //height: 45px;

    > .btn-icon {
      $size: 18px;
      $size-bounds: get-sizes-map($size);

      display: block;
      @include size($size);
      //@include center($size);
      font-size:   map-get($size-bounds, height);
      line-height: map-get($size-bounds, height);
    }

    @each $variant, $data in $btn-variants {
      $selector: if($variant == default, '&', '&.-#{$variant}');
      #{$selector} {
        $opts: map-get($btn-variants, $variant);
        $color:        map-get($opts, bg-color-normal);
        $color-hover:  map-get($opts, bg-color-hover);
        $color-focus:  map-get($opts, bg-color-focus);
        $color-active: map-get($opts, bg-color-active);

        @if $variant == default {
          $color:        map-get($opts, bg-color-hover);
          $color-hover:  map-get($opts, bg-color-hover);
          $color-focus:  map-get($opts, bg-color-hover);
          $color-active: map-get($opts, bg-color-active);
        }

        @if $variant == secondary {
          $color:        map-get($opts, color-normal);
          $color-hover:  map-get($opts, color-hover);
          $color-focus:  map-get($opts, color-focus);
          $color-active: map-get($opts, color-active);
        }

        > .circle {
          color: $color;
          background: #fff;
          border-color: rgba($color, .4);
        }

        @include btn-hover  ($proxy: '> .circle') { color: $color-hover; }
        @include btn-focus  ($proxy: '> .circle') { color: $color-focus; }
        @include btn-active ($proxy: '> .circle') { color: $color-active; }
      }
    }

    $btn-size: 47px 45px;
    $btn-size-map: get-sizes-map($btn-size);
    @include size($btn-size);
    @include control-size(0, 1px);
    line-height: map-get($btn-size-map, height);

    padding: 0;

    > .circle {
      display: inline-block;
      border-width: 1px;
      border-style: solid;
      border-radius: 50%;

      $size: 25px;
      $size-map: get-sizes-map($size);
      @include size($size);
      line-height: map-get($size-map, height) - 2;
      font-size: 20px;

      &.-small {
        $size: 18px;
        $size-map: get-sizes-map($size);
        @include size($size);
        line-height: map-get($size-map, height) - 2;
        font-size: 14px;
        font-weight: bold;
      }
    }
  }

  @include stack(x, 0, '.btn');
  .btn + .btn { border-left: 1px solid $borders-color; }

  &.-y {
    @include stack(y, 0, '.btn');
    .btn { display: block; }
    .btn + .btn {
      border-left: none;
      border-top: 1px solid $borders-color;
    }
  }
}
